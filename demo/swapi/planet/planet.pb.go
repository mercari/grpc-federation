// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: planet/planet.proto

package planetpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetPlanetRequest.
type GetPlanetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// planet id.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPlanetRequest) Reset() {
	*x = GetPlanetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planet_planet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanetRequest) ProtoMessage() {}

func (x *GetPlanetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_planet_planet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanetRequest.ProtoReflect.Descriptor instead.
func (*GetPlanetRequest) Descriptor() ([]byte, []int) {
	return file_planet_planet_proto_rawDescGZIP(), []int{0}
}

func (x *GetPlanetRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// GetPlanetReply.
type GetPlanetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planet *Planet `protobuf:"bytes,1,opt,name=planet,proto3" json:"planet,omitempty"`
}

func (x *GetPlanetReply) Reset() {
	*x = GetPlanetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planet_planet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlanetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlanetReply) ProtoMessage() {}

func (x *GetPlanetReply) ProtoReflect() protoreflect.Message {
	mi := &file_planet_planet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlanetReply.ProtoReflect.Descriptor instead.
func (*GetPlanetReply) Descriptor() ([]byte, []int) {
	return file_planet_planet_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlanetReply) GetPlanet() *Planet {
	if x != nil {
		return x.Planet
	}
	return nil
}

// ListPlanetsRequest.
type ListPlanetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ListPlanetsRequest) Reset() {
	*x = ListPlanetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planet_planet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanetsRequest) ProtoMessage() {}

func (x *ListPlanetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_planet_planet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanetsRequest.ProtoReflect.Descriptor instead.
func (*ListPlanetsRequest) Descriptor() ([]byte, []int) {
	return file_planet_planet_proto_rawDescGZIP(), []int{2}
}

func (x *ListPlanetsRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// ListPlanetsReply.
type ListPlanetsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planets []*Planet `protobuf:"bytes,1,rep,name=planets,proto3" json:"planets,omitempty"`
}

func (x *ListPlanetsReply) Reset() {
	*x = ListPlanetsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planet_planet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanetsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanetsReply) ProtoMessage() {}

func (x *ListPlanetsReply) ProtoReflect() protoreflect.Message {
	mi := &file_planet_planet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanetsReply.ProtoReflect.Descriptor instead.
func (*ListPlanetsReply) Descriptor() ([]byte, []int) {
	return file_planet_planet_proto_rawDescGZIP(), []int{3}
}

func (x *ListPlanetsReply) GetPlanets() []*Planet {
	if x != nil {
		return x.Planets
	}
	return nil
}

// Planet is a large mass, planet or planetoid in the Star Wars Universe, at the time of 0 ABY.
type Planet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// planet id.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of this planet.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The diameter of this planet in kilometers.
	Diameter string `protobuf:"bytes,3,opt,name=diameter,proto3" json:"diameter,omitempty"`
	// The number of standard hours it takes for this planet to complete a single rotation on its axis.
	RotationPeriod string `protobuf:"bytes,4,opt,name=rotation_period,json=rotationPeriod,proto3" json:"rotation_period,omitempty"`
	// The number of standard days it takes for this planet to complete a single orbit of its local star.
	OrbitalPeriod string `protobuf:"bytes,5,opt,name=orbital_period,json=orbitalPeriod,proto3" json:"orbital_period,omitempty"`
	// A number denoting the gravity of this planet, where "1" is normal or 1 standard G.
	// "2" is twice or 2 standard Gs. "0.5" is half or 0.5 standard Gs.
	Gravity string `protobuf:"bytes,6,opt,name=gravity,proto3" json:"gravity,omitempty"`
	// The average population of sentient beings inhabiting this planet.
	Population string `protobuf:"bytes,7,opt,name=population,proto3" json:"population,omitempty"`
	// The climate of this planet. Comma separated if diverse.
	Climate string `protobuf:"bytes,8,opt,name=climate,proto3" json:"climate,omitempty"`
	// The terrain of this planet. Comma separated if diverse.
	Terrain string `protobuf:"bytes,9,opt,name=terrain,proto3" json:"terrain,omitempty"`
	// The percentage of the planet surface that is naturally occurring water or bodies of water.
	SurfaceWater string `protobuf:"bytes,10,opt,name=surface_water,json=surfaceWater,proto3" json:"surface_water,omitempty"`
	// the hypermedia URL of this resource.
	Url string `protobuf:"bytes,11,opt,name=url,proto3" json:"url,omitempty"`
	// the ISO 8601 date format of the time that this resource was created.
	Created string `protobuf:"bytes,12,opt,name=created,proto3" json:"created,omitempty"`
	// the ISO 8601 date format of the time that this resource was edited.
	Edited string `protobuf:"bytes,13,opt,name=edited,proto3" json:"edited,omitempty"`
	// the person that live on this planet ids.
	ResidentIds []int64 `protobuf:"varint,14,rep,packed,name=resident_ids,json=residentIds,proto3" json:"resident_ids,omitempty"`
	// film ids.
	FilmIds []int64 `protobuf:"varint,15,rep,packed,name=film_ids,json=filmIds,proto3" json:"film_ids,omitempty"`
}

func (x *Planet) Reset() {
	*x = Planet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planet_planet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Planet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Planet) ProtoMessage() {}

func (x *Planet) ProtoReflect() protoreflect.Message {
	mi := &file_planet_planet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Planet.ProtoReflect.Descriptor instead.
func (*Planet) Descriptor() ([]byte, []int) {
	return file_planet_planet_proto_rawDescGZIP(), []int{4}
}

func (x *Planet) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Planet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Planet) GetDiameter() string {
	if x != nil {
		return x.Diameter
	}
	return ""
}

func (x *Planet) GetRotationPeriod() string {
	if x != nil {
		return x.RotationPeriod
	}
	return ""
}

func (x *Planet) GetOrbitalPeriod() string {
	if x != nil {
		return x.OrbitalPeriod
	}
	return ""
}

func (x *Planet) GetGravity() string {
	if x != nil {
		return x.Gravity
	}
	return ""
}

func (x *Planet) GetPopulation() string {
	if x != nil {
		return x.Population
	}
	return ""
}

func (x *Planet) GetClimate() string {
	if x != nil {
		return x.Climate
	}
	return ""
}

func (x *Planet) GetTerrain() string {
	if x != nil {
		return x.Terrain
	}
	return ""
}

func (x *Planet) GetSurfaceWater() string {
	if x != nil {
		return x.SurfaceWater
	}
	return ""
}

func (x *Planet) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Planet) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *Planet) GetEdited() string {
	if x != nil {
		return x.Edited
	}
	return ""
}

func (x *Planet) GetResidentIds() []int64 {
	if x != nil {
		return x.ResidentIds
	}
	return nil
}

func (x *Planet) GetFilmIds() []int64 {
	if x != nil {
		return x.FilmIds
	}
	return nil
}

var File_planet_planet_proto protoreflect.FileDescriptor

var file_planet_planet_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x74, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x77, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x22, 0x26, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x42, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x74, 0x73, 0x22, 0xad, 0x03, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x62, 0x69, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x70, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f,
	0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x57, 0x61, 0x74, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x64, 0x69, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x6d,
	0x49, 0x64, 0x73, 0x32, 0xaf, 0x01, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x65, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74,
	0x73, 0x12, 0x20, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0xaf, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x77,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x42, 0x0b, 0x50, 0x6c, 0x61, 0x6e,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x72, 0x69, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x2d, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x64, 0x65,
	0x6d, 0x6f, 0x2f, 0x73, 0x77, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x3b,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x53, 0x50, 0x58, 0xaa, 0x02,
	0x0c, 0x53, 0x77, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0xca, 0x02, 0x0c,
	0x53, 0x77, 0x61, 0x70, 0x69, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0xe2, 0x02, 0x18, 0x53,
	0x77, 0x61, 0x70, 0x69, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x53, 0x77, 0x61, 0x70, 0x69, 0x3a,
	0x3a, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_planet_planet_proto_rawDescOnce sync.Once
	file_planet_planet_proto_rawDescData = file_planet_planet_proto_rawDesc
)

func file_planet_planet_proto_rawDescGZIP() []byte {
	file_planet_planet_proto_rawDescOnce.Do(func() {
		file_planet_planet_proto_rawDescData = protoimpl.X.CompressGZIP(file_planet_planet_proto_rawDescData)
	})
	return file_planet_planet_proto_rawDescData
}

var file_planet_planet_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_planet_planet_proto_goTypes = []interface{}{
	(*GetPlanetRequest)(nil),   // 0: swapi.planet.GetPlanetRequest
	(*GetPlanetReply)(nil),     // 1: swapi.planet.GetPlanetReply
	(*ListPlanetsRequest)(nil), // 2: swapi.planet.ListPlanetsRequest
	(*ListPlanetsReply)(nil),   // 3: swapi.planet.ListPlanetsReply
	(*Planet)(nil),             // 4: swapi.planet.Planet
}
var file_planet_planet_proto_depIdxs = []int32{
	4, // 0: swapi.planet.GetPlanetReply.planet:type_name -> swapi.planet.Planet
	4, // 1: swapi.planet.ListPlanetsReply.planets:type_name -> swapi.planet.Planet
	0, // 2: swapi.planet.PlanetService.GetPlanet:input_type -> swapi.planet.GetPlanetRequest
	2, // 3: swapi.planet.PlanetService.ListPlanets:input_type -> swapi.planet.ListPlanetsRequest
	1, // 4: swapi.planet.PlanetService.GetPlanet:output_type -> swapi.planet.GetPlanetReply
	3, // 5: swapi.planet.PlanetService.ListPlanets:output_type -> swapi.planet.ListPlanetsReply
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_planet_planet_proto_init() }
func file_planet_planet_proto_init() {
	if File_planet_planet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_planet_planet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planet_planet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlanetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planet_planet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlanetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planet_planet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlanetsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planet_planet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Planet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_planet_planet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_planet_planet_proto_goTypes,
		DependencyIndexes: file_planet_planet_proto_depIdxs,
		MessageInfos:      file_planet_planet_proto_msgTypes,
	}.Build()
	File_planet_planet_proto = out.File
	file_planet_planet_proto_rawDesc = nil
	file_planet_planet_proto_goTypes = nil
	file_planet_planet_proto_depIdxs = nil
}
