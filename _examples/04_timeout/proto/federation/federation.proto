syntax = "proto3";

package federation;

import "grpc/federation/federation.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/empty.proto";

option go_package = "example/federation;federation";

option (grpc.federation.file)= {
  import: ["post/post.proto"]
};

extend google.protobuf.MethodOptions {
  Ext ext = 70001;
}

message Ext {
  string foo = 1;
}

service FederationService {
  option (grpc.federation.service) = {};
  rpc GetPost(GetPostRequest) returns (GetPostResponse) {
    option (grpc.federation.method).timeout = "1s";
    option (ext).foo = "xxx";
  };
  rpc UpdatePost(UpdatePostRequest) returns (google.protobuf.Empty) {
    option (grpc.federation.method).response = "UpdatePostResponse";
  }
}

message GetPostRequest {
  string id = 1;
}

message GetPostResponse {
  option (.grpc.federation.message) = {
    def {
      name: "post"
      message {
        name: "Post"
        args { name: "id", by: "$.id" }
      }
    }
  };
  Post post = 1 [(grpc.federation.field).by = "post"];
}

message Post {
  option (grpc.federation.message) = {
    def {
      name: "res"
      call {
        method: "post.PostService/GetPost"
        request { field: "id", by: "$.id" }
      }
    }
    def { name: "post", by: "res.post", autobind: true }
  };
  string id = 1;
  string title = 2;
  string content = 3;
}

message UpdatePostRequest {
  string id = 1;
}

message UpdatePostResponse {
  option (grpc.federation.message) = {
    def {
      call {
        method: "post.PostService/UpdatePost"
        request { field: "id" by: "$.id" }
      }
    }
  };
}