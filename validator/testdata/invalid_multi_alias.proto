syntax = "proto3";

package org.federation;

import "grpc/federation/federation.proto";
import "nested_post.proto";
import "nested_post2.proto";

option go_package = "example/federation;federation";

service FederationService {
  option (grpc.federation.service) = {};
  rpc GetPost(GetPostRequest) returns (GetPostResponse) {};
}

message GetPostRequest {
  string id = 1;
}

message GetPostResponse {
  option (grpc.federation.message) = {
    def {
      name: "post"
      message {
        name: "Post"
        args { name: "id", by: "$.id" }
      }
    }
  };
  Post post = 1 [(grpc.federation.field).by = "post"];
}

message Post {
  option (grpc.federation.message) = {
    def {
      name: "res"
      call {
        method: "org.post.PostService/GetPost"
        request { field: "id", by: "$.id" }
      }
    }
    def { name: "post", by: "res.post", autobind: true }
    def {
      name: "res2"
      call {
        method: "org.post.v2.PostService/GetPost"
        request { field: "id", by: "$.id" }
      }
    }
    def { name: "data2", by: "res2.post.data" }
  };
  string id = 1;
  PostData data = 2;
  PostData data2 = 3 [(grpc.federation.field).by = "data2"];
  PostType post_type = 4 [(grpc.federation.field).by = "org.post.PostDataType.POST_TYPE_A"];
}

enum PostType {
  option (grpc.federation.enum) = {
    alias: [ "org.post.PostDataType", "org.post.v2.PostDataType" ]
  };

  POST_TYPE_UNKNOWN = 0 [(grpc.federation.enum_value).default = true];
  POST_TYPE_FOO = 1 [(grpc.federation.enum_value) = { alias: ["POST_TYPE_A"] }];
  POST_TYPE_BAR = 2 [(grpc.federation.enum_value) = { alias: ["org.post.v2.PostDataType.POST_TYPE_B", "POST_TYPE_C"] }];
}

message PostData {
  option (grpc.federation.message) = {
    alias: [ "org.post.PostData", "org.post.v2.PostData" ]
  };

  PostType type = 1;
  string title = 2;
  PostContent content = 3;
  int64 dummy = 4;
}

message PostContent {
  option (grpc.federation.message) = {
    alias: [ "org.post.PostContent" ]
  };

  enum Category {
    option (grpc.federation.enum) = {
      alias: [ "org.post.PostContent.Category" ]
    };
  
    CATEGORY_A = 0;
    CATEGORY_B = 1;
  };

  Category category = 1;
  string head = 2;
  string body = 3;
  string dup_body = 4 [(grpc.federation.field).alias = "body"];
  map<int32, int32> counts = 5;
}
