syntax = "proto3";

package federation;

import "federation.proto";

option go_package = "example/federation;federation";
option (grpc.federation.file) = {
  import: ["post.proto", "user.proto"]
};

service FederationService {
  option (grpc.federation.service) = {};
  rpc GetPost(GetPostRequest) returns (GetPostResponse) {};
  rpc Foo(FooRequest) returns (FooResponse) {}
  rpc Bar(BarRequest) returns (BarResponse) {}
}

message GetPostRequest {
  string id = 1;
}

message GetPostResponse {
  option (grpc.federation.message) = {
    def {
      name: "post"
      message {
        name: "Post"
        args { name: "id", by: "$.id" }
      }
    }
    def {
      message {
        name: "Z"
        args [
          { name: "x" by: "Post{}" }
        ]
      }
    }
    def {
      message {
        name: "Z"
        args [
          { name: "x" by: "User{}" }
        ]
      }
    }
  };
  Post post = 1 [(grpc.federation.field).by = "post"];
}

message Z {
  option (grpc.federation.message) = {};
}

message Post {
  option (grpc.federation.message) = {
    def [
      {
        name: "res"
        call {
          method: "post.PostService/GetPost"
          request { field: "id", by: "$.id" }
        }
      },
      { name: "post", by: "res.post", autobind: true },
      {
        name: "user"
        message {
          name: "User"
          args [
            { by: "$.id.invalid" },
            { inline: "post.id" },
            { by: "...." },
            { inline: "...." }
          ]
        }
      }
    ]
  };
  string id = 1;
  string title = 2;
  string content = 3;
  User user = 4 [(grpc.federation.field).by = "user"];
}

message User {
  option (grpc.federation.message) = {
    def {
      name: "res"
      call {
        method: "user.UserService/GetUser"
        request { field: "id", by: "$.user_id" }
      }
    }
    def { name: "user", by: "res.user", autobind: true  }
  };
  string id = 1;
  string name = 2;
}

message FooRequest {}
message FooResponse {
  option (grpc.federation.message) = {
    def {
      message {
        name: "M"
        args { name: "x" by: "true" }
      }
      autobind: true
    }
  };
  string x = 1;
}


message BarRequest {}
message BarResponse {
  option (grpc.federation.message) = {
    def {
      message {
        name: "M"
        args { name: "x" by: "'foo'" }
      }
      autobind: true
    }
  };
  string x = 1;
}

message M {
  string x = 1 [(grpc.federation.field).by = "'hello'"];
}