{{- define "messageValidation" }}
{{- $ctx := .Ctx }}
{{- $error := .Error }}
var stat *grpcfed.Status
{{- if $error.VariableDefinitionSet }}
if _, err := func() (any, error) {
	{{- template "evalDefSet" $error.VariableDefinitionSet }}
	return nil, nil
}(); err != nil {
	return err
}
{{- end }}
if err := grpcfed.If({{ $ctx }}, &grpcfed.IfParam[*localValueType]{
	Value: value,
	Expr: `{{ $error.If.Expr }}`,
	CacheIndex: {{ $error.CELCacheIndex }},
	Body: func(value *localValueType) error {
		{{- if $error.Message }}
		errmsg, err := grpcfed.EvalCEL(ctx, &grpcfed.EvalCELRequest{
			Value: value,
			Expr: `{{ $error.Message.Expr }}`,
			OutType: reflect.TypeOf(""),
			CacheIndex: {{ $error.CELCacheIndex }},
		})
		if err != nil {
			return err
		}
		errorMessage := errmsg.(string)
		{{- else }}
		errorMessage := "error"
		{{- end }}
		{{- $details := $error.Details }}
		{{- if $details }}
		var details       []grpcfed.ProtoMessage
		{{- range $details }}
		{{- if .VariableDefinitionSet }}
		if _, err := func() (any, error){
			{{- template "evalDefSet" .VariableDefinitionSet }}
			return nil, nil
		}(); err != nil {
			return err
		}
		{{- end }}
		if err := grpcfed.If({{ $ctx }}, &grpcfed.IfParam[*localValueType]{
			Value: value,
			Expr: `{{ .If.Expr }}`,
			CacheIndex: {{ $error.CELCacheIndex }},
			Body: func(value *localValueType) error {
				{{- if .MessageSet }}
				if _, err := func() (any, error){
					{{- template "evalDefSet" .MessageSet }}
					return nil, nil
				}(); err != nil {
					return err
				}
				{{- range $idx, $def := .MessageSet.Definitions }}
				if detail := grpcfed.CustomMessage({{ $ctx }}, &grpcfed.CustomMessageParam{
					Value: value,
					MessageValueName: "{{ $def.Name }}",
					CacheIndex: {{ $error.CELCacheIndex }},
					MessageIndex: {{ $idx }},
				}); detail != nil {
					details = append(details, detail)
				}
				{{- end }}
				{{- end }}

				{{- range .PreconditionFailures }}
				{{- template "preconditionFailure" . }}
				{{- end }}
				{{- range .BadRequests }}
				{{- template "badRequest" . }}
				{{- end }}
				{{- range .LocalizedMessages }}
				{{- template "localizedMessage" . }}
				{{- end }}
				return nil
			},
		}); err != nil {
			return err
		}
		{{- end }}
		{{- end }}
		{{- if $details }}
		status := grpcfed.NewGRPCStatus(grpcfed.{{ .Error.GoGRPCStatusCode }}, errorMessage)
		statusWithDetails, err := status.WithDetails(details...)
		if err != nil {
			grpcfed.Logger({{ $ctx }}).ErrorContext({{ $ctx }}, "failed setting error details", slog.String("error", err.Error()))
			stat = status
		} else {
			stat = statusWithDetails
		}
		{{- else }}
		stat = grpcfed.NewGRPCStatus(grpcfed.{{ .Error.GoGRPCStatusCode }}, errorMessage)
		{{- end }}
		return nil
	},
}); err != nil {
	return err
}
return grpcfed.NewErrorWithLogAttrs(stat.Err(), grpcfed.LogAttrs({{ $ctx }}))
{{- end }}
